@model WordListViewModel

@{
    ViewBag.Title = "WordList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
	.table tbody td {
		white-space:nowrap;
	}

	.table tbody td.definition {
		white-space: normal;
	}
</style>
<h2>WordList</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table id="app" class="table">
    <thead>
        <tr>
            <th>Value</th>
            <th>Score</th>
            <th>Language</th>
            <th>Definition</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        <tr v-for="word in words" v-bind:class="[ word.Status == 1 ? 'success' : word.Status == 2 ? 'warning' : 'danger' ]">
            <td>{{word.Value}}</td>
            <td>{{word.Score}}</td>
            <td>{{word.Language}}</td>
            <td class="definition">{{word.Definition}}</td>
            <th></th>
        </tr>
    </tbody>
    <tbody>
        @foreach (var item in Model.WordsWithoutDefinition)
        {
            <tr class="@(item.Status == WordStatus.Known ? "success" : item.Status == WordStatus.Shaky ? "warning" : "danger")">
                <td>
                    @Html.DisplayFor(modelItem => item.Value)
                </td>
                <td>
                    @item.Score.ToString("0")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Language)
                </td>
                <td class="definition">
                    @Html.DisplayFor(modelItem => item.Definition)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>}
    </tbody>
    <thead>
        <tr>
            <th>Value</th>
            <th>Score</th>
            <th>Language</th>
            <th>Definition</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.WordsWithDefintion)
        {
            <tr class="@(item.Status == WordStatus.Known ? "success" : item.Status == WordStatus.Shaky ? "warning" : "danger")">
                <td>
                    @Html.DisplayFor(modelItem => item.Value)
                </td>
                <td>
                    @item.Score.ToString("0")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Language)
                </td>
                <td class="definition">
                    @Html.DisplayFor(modelItem => item.Definition)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>}
    </tbody>

</table>

@section Scripts {
<script>
    var app = new Vue({
        el: '#app',
        data: {
            words: []
        },
        methods: {
            load: function () {
                var self = this;

                $.ajax({
                    url: '/api/wordapi/getwords',
                    method: 'GET',
                    success: function (data) {
                        self.words = data;
                    }
                });
            }
        },
        created: function () {
            this.load();
        }
    });
</script>
}
