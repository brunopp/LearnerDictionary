@model LearnerDictionary.Models.ViewModels.WordFormViewModel
@{
	ViewBag.Title = "Home Page";

	var modelJson = Newtonsoft.Json.JsonConvert.SerializeObject(Model, new Newtonsoft.Json.JsonSerializerSettings
	{
		ReferenceLoopHandling = Newtonsoft.Json.ReferenceLoopHandling.Ignore,
		ContractResolver = new Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver()
	});
}

<style>
	textarea.wide {
		max-width: 100%;
	}

    #exampleList p.definition {
        display: inline-block;
    }

	#exampleList textarea.definition {
		display: inline-block;
	}

	#exampleList li span, #exampleList li p, #exampleList li textarea {
		vertical-align:top;
	}

	#exampleList table {
		display: inline-block;
		vertical-align: top;
	}

	#exampleList td.edit {
		vertical-align: top;
	}

	#exampleList td:last-child {
		width: 100%;
	}

    #definitionText {
        white-space: pre;
    }

    #editValue {
        display:none;
    }

    @@keyframes fade {
        from  {
            opacity: 0;
        }
        to {
            opacity: 1;
        }
    }

    .animate {
        animation-name: fade;
        animation-duration: 1s;
    }

    #value {
        display: inline-block;
    }

    .value-container {
        font-size: 36px;
        margin: 15px 0 10px 0;
    }

	.value-container .badge-container {
		font-size:12px;
	}
</style>

<div id="app" class="row">
	<div class="col-md-12 animate">

		<div class="value-container">
            <input id="editValue" class="form-control" type="text" v-model="value" /> <div id="value">{{value}}</div> ({{language}})
        
            <button type="button" class="btn btn-default btn-lg" v-on:click="editValue()">
                <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
            </button>

			<button type="button" class="btn btn-danger btn-lg" v-on:click="deleteWord()">
				<span class="glyphicon glyphicon-remove-sign" aria-hidden="true"></span>
			</button>
        </div>
		<div style="float:right;">

			<span class="badge-container">Today (straight) <span class="badge">{{todayStraight}}</span></span>
			<br />
			<span class="badge-container">Today (total) <span class="badge">{{todayTotal}}</span></span>
			<br />
			<br />

			<span class="badge-container">Yesterday (straight) <span class="badge">{{yesterdayStraight}}</span></span>
			<br />
			<span class="badge-container">Yesterday (total) <span class="badge">{{yesterdayTotal}}</span></span>
			<br />
			<br />

			<span class="badge-container">Day before yesterday (straight) <span class="badge">{{dayBeforeYesterdayStraight}}</span></span>
			<br />
			<span class="badge-container">Day before yesterday (total) <span class="badge">{{dayBeforeYesterdayTotal}}</span></span>
			<br />
			<br />
			<span class="badge-container">Total <span class="badge">{{total}}</span></span>
		</div>
		<textarea placeholder="Your guess..." class="form-control"></textarea>
		<br />
		<div>
			<button class="btn btn-success" type="button" data-toggle="collapse" data-target="#collapseExamples" aria-expanded="false" aria-controls="collapseExamples">
				Show examples...
			</button>
			<br /><br />
			<div class="collapse" id="collapseExamples">
				<div class="well">
					<ul id="exampleList">
						<li v-for="example in examples">
							<table>
								<tr>
									<td class="edit">
										<button type="button" class="btn btn-default btn-xs" v-on:click="edit(example)">
											<span class="glyphicon glyphicon-pencil" v-bind:class="{ 'glyphicon-pencil': !example.editMode, 'glyphicon glyphicon-ok': example.editMode }" aria-hidden="true"></span>
										</button>
										<button type="button" class="btn btn-default btn-xs" v-on:click="remove(example)">
											<span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
										</button>
									</td>
									<td>
										<p class="definition" v-show="!example.editMode">{{example.text}}</p>
										<textarea class="definition form-control wide" v-show="example.editMode" v-model="example.text">{{example.text}}</textarea>
									</td>
								</tr>
							</table>
						</li>
                        <li v-show="examples.length == 0">
                            No examples...
                        </li>
					</ul>
					<button type="button" data-recognize="true" class="btn btn-success" v-on:click="add">Add</button>
				</div>
			</div>

			<button class="btn btn-warning" type="button" data-toggle="collapse" data-target="#collapseDefinition" aria-expanded="false" aria-controls="collapseDefinition">
				Show definition...
			</button>
			<span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true" v-if="!hasDefinition"></span>
			<br /><br />
			<div class="collapse" id="collapseDefinition">
				<div class="well">
					<div>
						<div style="float: left; width: 90%;">
							<textarea id="definition" class="form-control wide" style="display:none;" v-model="definition"></textarea>
							<p id="definitionText">{{definition}}</p>
						</div>
						<button id="edit" type="button" class="btn btn-default btn-lg" style="float:right;" v-on:click="editDefinition()">
							<span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
						</button>
					</div>
					<div style="clear:both;"></div>
					<br />
					<button data-recognize="true" class="btn btn-success submit" v-on:click="postAttempt(true)">I got it!</button>
					<button data-recognize="false" class="btn btn-danger submit" v-on:click="postAttempt(false)">Maybe next time...</button>
				</div>
			</div>
		</div>

	</div>
</div>

@section Scripts {
	<script>
		var app = new Vue({
			el: '#app',
            data: @Html.Raw(modelJson),
			methods: {
				add: function () {
					this.examples.push({
						id: 0,
						wordId: @Model.Id,
						text: '',
						editMode: true
					});
				},
				edit: function (event) {
					if (event.editMode === false) {
						event.editMode = true;
						return;
					} else {
						(function (a) {
							$.ajax({
								url: '/api/WordApi/PostExample',
								method: 'POST',
								data: a,
								success: function (id) {
									a.id = id;
									a.editMode = false;
								}
							});
						})(event);
					}
				},
				remove: function (event) {
					var doRemove = function (event, self) {
						self.examples.splice(self.examples.indexOf(event), 1);
					}

					if (event.id === 0) {
						doRemove(event, this);
						return;
					}

					(function (a, self) {
						$.ajax({
							url: '/api/WordApi/DeleteExample?id=' + event.id,
							method: 'DELETE',
							success: function (id) {
								doRemove(event, self);
							}
						});
					})(event, this);
                },
                editValue: function () {
                    var show = $('#value').is(':visible');
                    if (show) {
                        $('#editValue').show();
                        $('#value').hide();
                    } else {
                        $('#editValue').hide();
                        $('#value').show();
                    }
                },
                postAttempt: function (recognize) {
                    var self = this;

                    $.ajax({
                        url: '/api/WordApi/PostAttempt',
                        method: 'POST',
                        data: {
                            wordId: self.id,
                            wordValue: self.value,
                            recognize: recognize,
                            defintion: self.definition
                        },
                        success: function () {
                            window.location.reload();
                        }
                    });
                },
                editDefinition: function () {
                    var $def = $('#definition');
                    var $defText = $('#definitionText');
                    if ($def.is(":visible")) {
                        $def.hide();
                        $defText.show();
                    } else {
                        $def.show();
                        $defText.hide();
                    }
				},
				deleteWord: function () {
					var self = this;

					if (confirm('Delete word?')) {
						$.ajax({
							url: '/api/WordApi/Delete?id=' + self.id,
							method: 'DELETE',
							success: function () {
								window.location.reload();
							}
						});
					}
				}
			}
		});
	</script>
}